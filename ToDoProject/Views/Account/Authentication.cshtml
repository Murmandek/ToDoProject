@model ToDoProject.Models.User
@{
    ViewData["Title"] = "Autorization";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<form asp-antiforgery="true">
    <div class="validation" asp-validation-summary="ModelOnly"></div>
    <div class="form-group" id="userInfo" style="display:none;">
        <label>You enter as: </label> <label id="userName"></label>
        <p></p>
        @*<button type="button" class="btn btn-primary" onclick=' location.href="/employees"'>Ok</button>  @location.href="/Employee/Index"'*@
        <a class="btn btn-primary" asp-area="" asp-controller="Employee" asp-action="Index"> Ok </a>
    </div>
    <div id="loginForm">
        <div class="form-group">
            <div class="validation" asp-validation-summary="All"></div>
            <label asp-for="Login" for="exampleInputEmail1">Email address</label>
            <input asp-for="Login" id="emailLogin" class="form-control" placeholder="name@example.com">  
            <small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
            <span asp-validation-for="Login"></span>
            <span id="errorName"></span>
        </div>
        <div class="form-group">
            <label asp-for="Password" for="exampleInputPassword1">Enter password</label>
            <input asp-for="Password" id="passwordLogin" type="password" class="form-control" placeholder="Password">
            <span asp-validation-for="Password"></span>
        </div>
        <p>
            <button type="button" id="submitLogin" class="btn btn-primary">Submit</button>
        </p>
        <p>
            <a asp-controller="Account" asp-action="Create">Registration</a>
        </p>
    </div>
    
    <script>
        var tokenKey = "accessToken";

        async function getTokenAsync() {

            const formData = new FormData();
            formData.append("grant_type", "password");
            formData.append("username", document.getElementById("emailLogin").value);
            formData.append("password", document.getElementById("passwordLogin").value);

            const response = await fetch("/token", {
                method: "POST",
                headers: { "Accept": "application/json" },
                body: formData
            });

            const data = await response.json();

            if (response.ok === true)
            {
                document.getElementById("userName").innerText = data.username;
                document.getElementById("userInfo").style.display = "block";
                document.getElementById("loginForm").style.display = "none";
                
                sessionStorage.setItem(tokenKey, data.access_token);
                console.log(data.access_token);
            }
            else
            {
                document.getElementById("errorName").innerText = data.errorText;
                console.log("Error: ", response.status, data.errorText);
            }
        };

        async function getData(url) {
            const token = sessionStorage.getItem(tokenKey);

            const response = await fetch(url, {
                method: "GET",
                headers: {
                    "Accept": "application/json",
                    "Authorization": "Bearer " + token  
                }
            });
            if (response.ok === true) {

                const data = await response.json();
                alert(data)
            }
            else
                console.log("Status: ", response.status);
        };

        document.getElementById("submitLogin").addEventListener("click", e => {

            e.preventDefault();
            getTokenAsync();
        });
    </script>
</form>


@section Scripts{

    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
}