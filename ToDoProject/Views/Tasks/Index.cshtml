@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@model ToDoProject.Models.ViewModels.TasksViewModel
@*@addTagHelper *, ToDoProject*@
@{
    ViewData["Title"] = @Localizer["Title"];
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>@ViewData["Title"]</h2>

<p>
    <a asp-controller="Tasks" asp-action="Create" class="btn btn-primary">@Localizer["Add"]</a>
</p>


<form asp-action="Index" method="get">
    <div class="form-row">
        <div class="col">
            <input type="text" asp-for="SearchString" name="SearchString" class="form-control" placeholder="@Localizer["Placeholder"]" />
        </div>
        <div class="col">
            <input type="submit" value="@Localizer["Search"]" class="btn btn-outline-success my-2 my-sm-0" />
            <input type="submit" asp-action="ClearIndex" value="@Localizer["Back"]" class="btn btn-outline-secondary" />
        </div>
    </div>
    <p></p>
</form>


<table class="table">
    <tr>
        <th>@Localizer["Name"]</th>
        <th>@Localizer["Description"]</th>
        <th>@Localizer["Actions"]</th>
    </tr>

    @foreach (var item in Model.Tasks)
    {
        <tr>
            <td><a asp-controller="Tasks" asp-action="Details" asp-route-id="@item.Id">@item.Name</a></td>
            <td>@item.Description</td>
            <td>
                <a asp-controller="Tasks" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-secondary"> @Localizer["Edit"] </a>
                <a asp-controller="Tasks" asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">@Localizer["Delete"]</a>
            </td>
        </tr>
    }
</table>

<nav aria-label="Page navigation">
    <ul class="pagination">
        @if (Model.PaginationViewModel.HasPreviousPage)
        {
            <li class="page-item">
                <a asp-action="Index" asp-route-page="@(Model.PaginationViewModel.PageNumber - 1)" class="page-link">
                    @Localizer["Previous"]
                </a>
            </li>
            <li class="page-item">
                <a asp-action="Index" asp-route-page="@(Model.PaginationViewModel.PageNumber - 1)" class="page-link">
                    @(Model.PaginationViewModel.PageNumber - 1)
                </a>
            </li>
        }
        @if (Model.PaginationViewModel.HasNextPage)
        {
            <li class="page-item">
                <a asp-action="Index" asp-route-page="@(Model.PaginationViewModel.PageNumber)" class="page-link">
                    @(Model.PaginationViewModel.PageNumber)
                </a>
            </li>
            <li class="page-item">
                <a asp-action="Index" asp-route-page="@(Model.PaginationViewModel.PageNumber + 1)" class="page-link">
                    @(Model.PaginationViewModel.PageNumber + 1)
                </a>
            </li>
            <li class="page-item">
                <a asp-action="Index" asp-route-page="@(Model.PaginationViewModel.PageNumber + 1)" class="page-link">
                    @Localizer["Next"]
                </a>
            </li>
        }
    </ul>
</nav>